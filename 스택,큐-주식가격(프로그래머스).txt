## 스택/큐 -- 주식가격 (프로그래머스)

문제 설명:
초 단위로 기록된 주식가격이 담긴 배열 prices가 매개변수로 주어질 때, 가격이 떨어지지 않은 기간은 몇 초인지를 return 하도록 solution 함수를 완성하세요.

제한사항
prices의 각 가격은 1 이상 10,000 이하인 자연수입니다.
prices의 길이는 2 이상 100,000 이하입니다.
입출력 예
prices	return
[1, 2, 3, 2, 3]	[4, 3, 1, 1, 0]
입출력 예 설명
1초 시점의 ₩1은 끝까지 가격이 떨어지지 않았습니다.
2초 시점의 ₩2은 끝까지 가격이 떨어지지 않았습니다.
3초 시점의 ₩3은 1초뒤에 가격이 떨어집니다. 따라서 1초간 가격이 떨어지지 않은 것으로 봅니다.
4초 시점의 ₩2은 1초간 가격이 떨어지지 않았습니다.
5초 시점의 ₩3은 0초간 가격이 떨어지지 않았습니다.




## 핵심 개념
1. 기준의 수가 비교하는 수보다 커지는 경우가 오면 비교를 멈추고 알맞은 값 answer에 넣기.
2. 그런 경우를 끝까지 못찾으면 그에 알맞은 값 넣기.


##코드
def solution(prices):
    answer = []
    pr_len = len(prices)
    for std in range(pr_len - 1): # 마지막은 하지 않아도 0이라 1을 뺏다.
        for compair in range(std + 1,pr_len): # 기준의 앞에 수 부터 비교
            if prices[std] > prices[compair] or compair == pr_len - 1: # 커지는 경우나 마지막인 경우 append
                answer.append(compair - std) 
                break
    answer.append(0) # 마지막 수 0 추가
    return answer


## 배운점.
왜 자꾸 답이 틀린가 봤더니 break를 안써주었다. for문 에서는 break를 잘 써야 겠다.
다른 사람의 풀이를 보면 answer = [0]*len(prices) 이런거를 봤는데 이것은 answer를 [0,0,0] 이러한
식으로 초기화를 시켜주는 구문이다.
