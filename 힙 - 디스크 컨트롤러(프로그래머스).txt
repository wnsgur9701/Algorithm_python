힙 - 디스크 컨트롤러 -프로그래머스

코드
def solution(jobs):
    answer = 0
    start = 0  # 현재까지 진행된 작업 시간
    length = len(jobs)

    jobs = sorted(jobs, key=lambda x: x[1])  # 소요시간 우선 정렬
				      # 여기서 소요시간만 고려하면 되는 것이 다른 것을 진행하고 있

    while len(jobs) != 0:
        for i in range(len(jobs)):
            if jobs[i][0] <= start: # 다음 프로세스 시작하기 전에 들어오면
                start += jobs[i][1] # 이미 가장 짧은 것으로 정렬이 되어있기 때문에 start시간에 더해준다
                answer += start - jobs[i][0] # 답은 waiting시간을 구하는 것이기 때문에 이렇게 해준다
                jobs.pop(i) # 세어주었으니 뺸다
                break
            # 해당시점에 아직 작업이 들어오지 않았으면 시간 ++
            if i == len(jobs) - 1: # 이 부분이 중요 다 돌았는데도 겹치는 부분이 없으면 start시간을 1늘려서 다시 돌린다.
                start += 1

    return answer // length # 평균 구하기.


# 느낀점.
풀지 못했을 뿐만 아니라 거의 손도 못댔다. 개념을 이해하지 못했다. 여기서 구현할려고 하는 것은 SJF(Shortest Job First)이다.
핵심 개념은 내가 작업을 하고 있는 도중 어떠한 프로세스가 도착한다면 그 중 가장 짧은 것을 순서대로 처리한다.

