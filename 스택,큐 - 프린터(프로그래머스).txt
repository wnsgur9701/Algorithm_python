##스택/큐 - 프린터 - 프로그래머스

코드
def solution(priorities, location):
    queue =  [(i,p) for i,p in enumerate(priorities)]
    answer = 0
    while True:
        cur = queue.pop(0)
        if any(cur[1] < q[1] for q in queue):
            queue.append(cur)
        else:
            answer += 1
            if cur[0] == location:
                return answer




#중요 개념.
1. 순서를 포함하여 튜플로 된 큐를 생성한다. ---> [(i,p) for i,p in enumerate(priorities]
2. any 함수 사용.-----> true 와 false를 return 한다.



# 나의 풀이.
def solution(priorities, location):
    o_prt =[(i,j) for i,j in enumerate(priorities)] # [(0,2),(1,1),(2,3),(3,2)]이러한 식으로 저장
    count = 0
    answer = 0
    while o_prt:
        temp = o_prt.pop(0) # 둘다 뺀다
        priorities.pop(0)
#
        if len(priorities) == 0: # 만약 마지막 수를 빼면 남아있는 것이 아무것도 없기 때문에
            priorities = [0] # 임의로 이렇게 넣어서 max함수가 인식하게 해야한다.
#
        if temp[1] >= max(priorities): # 남아 있는 수중 가장 큰 것이면
            count += 1 # 세준다
            if temp[0] == location: # 그리고 만약 그것이 내가 찾으려는 수면 답에 넣는다
                answer = count
                break # 찾으면 빠져 나온다.
        else: # 아니면
            o_prt.append(temp) # 맨 뒤에 추가
            priorities.append(temp[1]) # 맨 뒤에 추가
    return answer

# ~~~# 이게 고친 부분. 고치고 맞았다.
문제는 max함수가 빈 리스트이면 어떠한 것도 인식을 못한다. 역시 큐나 무엇을 할때
마지막 경우의 수를 고려하는 것이 가장 중요한 것 같다.